name: Security Scan
on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger
# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better secret detection
      
      # Secret Scanning with Gitleaks
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Check for committed secrets files
      - name: Check for committed secrets files
        run: |
          echo "🔍 Checking for accidentally committed secret files..."
          found_files=false
          
          if [ -f "zenvestor_server/.env" ]; then
            echo "❌ ERROR: Found zenvestor_server/.env"
            found_files=true
          fi
          
          if [ -f "zenvestor_server/config/passwords.yaml" ]; then
            echo "❌ ERROR: Found zenvestor_server/config/passwords.yaml"
            found_files=true
          fi
          
          if [ "$found_files" = true ]; then
            echo ""
            echo "Secret files must never be committed to version control!"
            echo "Add them to .gitignore and remove from the repository."
            exit 1
          else
            echo "✅ No secret files found in repository"
          fi
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      # Dependency Vulnerability Scanning
      - name: Install dependencies
        run: |
          cd zenvestor_server && dart pub get
          cd ../zenvestor_flutter && flutter pub get
      - name: Check for vulnerable dependencies
        id: dep-scan
        run: |
          echo "🔍 Checking for vulnerable dependencies..."

          # Check server dependencies
          cd zenvestor_server
          dart pub outdated --json > ../server-deps.json

          # Check Flutter dependencies
          cd ../zenvestor_flutter
          flutter pub outdated --json > ../flutter-deps.json

          # Parse results (basic check - enhance as needed)
          cd ..
          if grep -q '"isDiscontinued": true' server-deps.json flutter-deps.json; then
            echo "⚠️ Found discontinued packages"
            echo "discontinued_found=true" >> $GITHUB_OUTPUT
          fi
      - name: Activate and run pana
        run: |
          dart pub global activate pana
          export PATH="$PATH:$HOME/.pub-cache/bin"

          echo "📊 Running pana analysis on server..."
          cd zenvestor_server
          pana --no-warning --json > ../server-pana.json || true

          echo "📊 Running pana analysis on Flutter..."
          cd ../zenvestor_flutter
          pana --no-warning --json > ../flutter-pana.json || true

          # Check scores and fail if below threshold
          cd ..
          server_score=$(jq -r '.scores.grantedPoints' server-pana.json)
          flutter_score=$(jq -r '.scores.grantedPoints' flutter-pana.json)

          echo "Server pana score: $server_score"
          echo "Flutter pana score: $flutter_score"
      
      # Trivy Vulnerability Scanning
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          exit-code: '1'  # Block on all severities
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy-filesystem'
