# Lefthook configuration for Zenvestor
# Git hooks for code quality enforcement

pre-commit:
  parallel: false  # Run phases sequentially
  commands:
    # Phase 1: Auto-formatting (both run in parallel via shell)
    format-all:
      run: |
        echo "🎨 Formatting code..." && \
        (cd zenvestor_server && dart format . && git add -A) & \
        (cd zenvestor_flutter && dart format . && git add -A) & \
        wait && \
        echo "✅ Formatting complete"
      skip:
        - merge
        - rebase
      
    # Phase 2: Static Analysis (both run in parallel via shell)
    analyze-all:
      run: |
        echo "🔍 Analyzing code..." && \
        (cd zenvestor_server && dart analyze --fatal-infos) & \
        server_pid=$! && \
        (cd zenvestor_flutter && flutter analyze --fatal-infos) & \
        flutter_pid=$! && \
        wait $server_pid && wait $flutter_pid && \
        echo "✅ Analysis complete"
      
    # Phase 3: Tests with Coverage
    test-all:
      run: |
        echo "🧪 Running tests with coverage..." && \
        output=$(./scripts/test-coverage.sh) && \
        echo "$output" && \
        server_coverage=$(echo "$output" | grep "Server:" | grep -oE "[0-9]+(\.[0-9]+)?") && \
        flutter_coverage=$(echo "$output" | grep "Flutter:" | grep -oE "[0-9]+(\.[0-9]+)?") && \
        echo "" && \
        echo "Coverage threshold: 90%" && \
        echo "" && \
        # Check server coverage
        if [ $(echo "$server_coverage < 90" | bc -l) -eq 1 ]; then
          echo "❌ Server coverage ${server_coverage}% is below 90% threshold"
          exit 1
        else
          echo "✅ Server coverage ${server_coverage}% meets threshold"
        fi && \
        # Check flutter coverage
        if [ $(echo "$flutter_coverage < 90" | bc -l) -eq 1 ]; then
          echo "❌ Flutter coverage ${flutter_coverage}% is below 90% threshold"
          exit 1
        else
          echo "✅ Flutter coverage ${flutter_coverage}% meets threshold"
        fi && \
        echo "✅ All tests complete"

# Pre-push hook to run tests with coverage before pushing
# Tests require database to be running via docker-compose
pre-push:
  parallel: false
  commands:
    test-coverage:
      run: |
        echo "🧪 Running tests with coverage..." && \
        output=$(./scripts/test-coverage.sh) && \
        echo "$output" && \
        server_coverage=$(echo "$output" | grep "Server:" | grep -oE "[0-9]+(\.[0-9]+)?") && \
        flutter_coverage=$(echo "$output" | grep "Flutter:" | grep -oE "[0-9]+(\.[0-9]+)?") && \
        echo "" && \
        echo "Coverage threshold: 90%" && \
        echo "" && \
        # Check server coverage
        if [ $(echo "$server_coverage < 90" | bc -l) -eq 1 ]; then
          echo "❌ Server coverage ${server_coverage}% is below 90% threshold"
          exit 1
        else
          echo "✅ Server coverage ${server_coverage}% meets threshold"
        fi && \
        # Check flutter coverage
        if [ $(echo "$flutter_coverage < 90" | bc -l) -eq 1 ]; then
          echo "❌ Flutter coverage ${flutter_coverage}% is below 90% threshold"
          exit 1
        else
          echo "✅ Flutter coverage ${flutter_coverage}% meets threshold"
        fi
      tags: test