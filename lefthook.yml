# Lefthook configuration for Zenvestor
# Git hooks for code quality enforcement

pre-commit:
  parallel: false
  commands:
    # Phase 1: Auto-formatting (runs first, automatically fixes and stages changes)
    format-server:
      run: cd zenvestor_server && dart format . && git add -A
      tags: format
      skip:
        - merge
        - rebase
      
    format-flutter:
      run: cd zenvestor_flutter && dart format . && git add -A  
      tags: format
      skip:
        - merge
        - rebase
      
    # Phase 2: Static Analysis (shows ALL errors before failing)
    analyze-server:
      run: cd zenvestor_server && dart analyze --fatal-infos
      tags: analyze
      
    analyze-flutter:
      run: cd zenvestor_flutter && flutter analyze --fatal-infos
      tags: analyze
      
    # Phase 3: Tests with Coverage (requires Docker containers to be running)
    test-server-coverage:
      run: |
        cd zenvestor_server && \
        dart test --coverage=coverage && \
        dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib && \
        lcov --remove coverage/lcov.info 'lib/src/generated/*' -o coverage/lcov.info && \
        total=$(lcov --summary coverage/lcov.info 2>/dev/null | grep "lines" | grep -oE "[0-9]+\.[0-9]+%" | sed 's/%//') && \
        echo "Server test coverage: ${total}%" && \
        awk -v total="$total" 'BEGIN { if (total < 45) { print "❌ Coverage below 45% threshold"; exit 1 } else { print "✅ Coverage meets 45% threshold" } }'
      tags: test
      
    test-flutter-coverage:
      run: |
        cd zenvestor_flutter && \
        flutter test --coverage && \
        total=$(lcov --summary coverage/lcov.info 2>/dev/null | grep "lines" | grep -oE "[0-9]+\.[0-9]+%" | sed 's/%//') && \
        echo "Flutter test coverage: ${total}%" && \
        awk -v total="$total" 'BEGIN { if (total < 45) { print "❌ Coverage below 45% threshold"; exit 1 } else { print "✅ Coverage meets 45% threshold" } }'
      tags: test

# Pre-push hook to run tests with coverage before pushing
# Tests require database to be running via docker-compose
pre-push:
  parallel: true
  commands:
    test-server-coverage:
      run: |
        cd zenvestor_server && \
        dart test --coverage=coverage && \
        dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib && \
        lcov --remove coverage/lcov.info 'lib/src/generated/*' -o coverage/lcov.info && \
        total=$(lcov --summary coverage/lcov.info 2>/dev/null | grep "lines" | grep -oE "[0-9]+\.[0-9]+%" | sed 's/%//') && \
        echo "Server test coverage: ${total}%" && \
        awk -v total="$total" 'BEGIN { if (total < 45) { print "❌ Coverage below 45% threshold"; exit 1 } else { print "✅ Coverage meets 45% threshold" } }'
      tags: test
      
    test-flutter-coverage:
      run: |
        cd zenvestor_flutter && \
        flutter test --coverage && \
        total=$(lcov --summary coverage/lcov.info 2>/dev/null | grep "lines" | grep -oE "[0-9]+\.[0-9]+%" | sed 's/%//') && \
        echo "Flutter test coverage: ${total}%" && \
        awk -v total="$total" 'BEGIN { if (total < 45) { print "❌ Coverage below 45% threshold"; exit 1 } else { print "✅ Coverage meets 45% threshold" } }'
      tags: test